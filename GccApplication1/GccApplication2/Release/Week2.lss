
Week2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000001f0  00000264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000029c  2**2
                  CONTENTS, READONLY
  4 .debug_info   00000780  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000718  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000169  00000000  00000000  00001170  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000027d  00000000  00000000  000012d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__vector_2>
   a:	00 00       	nop
   c:	77 c0       	rjmp	.+238    	; 0xfc <__vector_3>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ef       	ldi	r30, 0xF0	; 240
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	38 d0       	rcall	.+112    	; 0x124 <main>
  b4:	9b c0       	rjmp	.+310    	; 0x1ec <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <wait>:
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	28 17       	cp	r18, r24
  be:	39 07       	cpc	r19, r25
  c0:	4c f4       	brge	.+18     	; 0xd4 <wait+0x1c>
  c2:	ef ec       	ldi	r30, 0xCF	; 207
  c4:	f7 e0       	ldi	r31, 0x07	; 7
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <wait+0xe>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <wait+0x14>
  cc:	00 00       	nop
  ce:	2f 5f       	subi	r18, 0xFF	; 255
  d0:	3f 4f       	sbci	r19, 0xFF	; 255
  d2:	f4 cf       	rjmp	.-24     	; 0xbc <wait+0x4>
  d4:	08 95       	ret

000000d6 <__vector_2>:
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
  e0:	8f 93       	push	r24
  e2:	df 99       	sbic	0x1b, 7	; 27
  e4:	03 c0       	rjmp	.+6      	; 0xec <__vector_2+0x16>
  e6:	8b b3       	in	r24, 0x1b	; 27
  e8:	88 0f       	add	r24, r24
  ea:	01 c0       	rjmp	.+2      	; 0xee <__vector_2+0x18>
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	8b bb       	out	0x1b, r24	; 27
  f0:	8f 91       	pop	r24
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	0f 90       	pop	r0
  f8:	1f 90       	pop	r1
  fa:	18 95       	reti

000000fc <__vector_3>:
  fc:	1f 92       	push	r1
  fe:	0f 92       	push	r0
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	0f 92       	push	r0
 104:	11 24       	eor	r1, r1
 106:	8f 93       	push	r24
 108:	8b b3       	in	r24, 0x1b	; 27
 10a:	82 30       	cpi	r24, 0x02	; 2
 10c:	18 f0       	brcs	.+6      	; 0x114 <__vector_3+0x18>
 10e:	8b b3       	in	r24, 0x1b	; 27
 110:	86 95       	lsr	r24
 112:	01 c0       	rjmp	.+2      	; 0x116 <__vector_3+0x1a>
 114:	80 e8       	ldi	r24, 0x80	; 128
 116:	8b bb       	out	0x1b, r24	; 27
 118:	8f 91       	pop	r24
 11a:	0f 90       	pop	r0
 11c:	0f be       	out	0x3f, r0	; 63
 11e:	0f 90       	pop	r0
 120:	1f 90       	pop	r1
 122:	18 95       	reti

00000124 <main>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	28 97       	sbiw	r28, 0x08	; 8
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	81 bb       	out	0x11, r24	; 17
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	82 bb       	out	0x12, r24	; 18
 140:	28 d0       	rcall	.+80     	; 0x192 <init>
 142:	88 e0       	ldi	r24, 0x08	; 8
 144:	e0 e0       	ldi	r30, 0x00	; 0
 146:	f1 e0       	ldi	r31, 0x01	; 1
 148:	de 01       	movw	r26, r28
 14a:	11 96       	adiw	r26, 0x01	; 1
 14c:	01 90       	ld	r0, Z+
 14e:	0d 92       	st	X+, r0
 150:	8a 95       	dec	r24
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0x28>
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e d0       	rcall	.+28     	; 0x176 <set_cursor>
 15a:	ce 01       	movw	r24, r28
 15c:	01 96       	adiw	r24, 0x01	; 1
 15e:	3b d0       	rcall	.+118    	; 0x1d6 <display_text>
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	28 96       	adiw	r28, 0x08	; 8
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	f8 94       	cli
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	cd bf       	out	0x3d, r28	; 61
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <set_cursor>:
 176:	9f ef       	ldi	r25, 0xFF	; 255
 178:	94 bb       	out	0x14, r25	; 20
 17a:	15 ba       	out	0x15, r1	; 21
 17c:	80 55       	subi	r24, 0x50	; 80
 17e:	85 bb       	out	0x15, r24	; 21
 180:	08 95       	ret

00000182 <writeLcd>:
 182:	ab 9a       	sbi	0x15, 3	; 21
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	97 df       	rcall	.-210    	; 0xb8 <wait>
 18a:	ab 98       	cbi	0x15, 3	; 21
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	93 cf       	rjmp	.-218    	; 0xb8 <wait>

00000192 <init>:
 192:	cf 93       	push	r28
 194:	8f ef       	ldi	r24, 0xFF	; 255
 196:	84 bb       	out	0x14, r24	; 20
 198:	15 ba       	out	0x15, r1	; 21
 19a:	c0 e2       	ldi	r28, 0x20	; 32
 19c:	c5 bb       	out	0x15, r28	; 21
 19e:	f1 df       	rcall	.-30     	; 0x182 <writeLcd>
 1a0:	c5 bb       	out	0x15, r28	; 21
 1a2:	ef df       	rcall	.-34     	; 0x182 <writeLcd>
 1a4:	80 e8       	ldi	r24, 0x80	; 128
 1a6:	85 bb       	out	0x15, r24	; 21
 1a8:	ec df       	rcall	.-40     	; 0x182 <writeLcd>
 1aa:	15 ba       	out	0x15, r1	; 21
 1ac:	ea df       	rcall	.-44     	; 0x182 <writeLcd>
 1ae:	80 ef       	ldi	r24, 0xF0	; 240
 1b0:	85 bb       	out	0x15, r24	; 21
 1b2:	e7 df       	rcall	.-50     	; 0x182 <writeLcd>
 1b4:	15 ba       	out	0x15, r1	; 21
 1b6:	e5 df       	rcall	.-54     	; 0x182 <writeLcd>
 1b8:	80 e6       	ldi	r24, 0x60	; 96
 1ba:	85 bb       	out	0x15, r24	; 21
 1bc:	cf 91       	pop	r28
 1be:	e1 cf       	rjmp	.-62     	; 0x182 <writeLcd>

000001c0 <writeData>:
 1c0:	cf 93       	push	r28
 1c2:	c8 2f       	mov	r28, r24
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	aa 9a       	sbi	0x15, 2	; 21
 1c8:	dc df       	rcall	.-72     	; 0x182 <writeLcd>
 1ca:	c2 95       	swap	r28
 1cc:	c0 7f       	andi	r28, 0xF0	; 240
 1ce:	c5 bb       	out	0x15, r28	; 21
 1d0:	aa 9a       	sbi	0x15, 2	; 21
 1d2:	cf 91       	pop	r28
 1d4:	d6 cf       	rjmp	.-84     	; 0x182 <writeLcd>

000001d6 <display_text>:
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	ec 01       	movw	r28, r24
 1dc:	89 91       	ld	r24, Y+
 1de:	88 23       	and	r24, r24
 1e0:	11 f0       	breq	.+4      	; 0x1e6 <display_text+0x10>
 1e2:	ee df       	rcall	.-36     	; 0x1c0 <writeData>
 1e4:	fb cf       	rjmp	.-10     	; 0x1dc <display_text+0x6>
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <_exit>:
 1ec:	f8 94       	cli

000001ee <__stop_program>:
 1ee:	ff cf       	rjmp	.-2      	; 0x1ee <__stop_program>
